server:
  port:
    9003

spring:
  application:
    name: booking
  banner:
    location: classpath:banner.txt
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}/${DB_NAME}?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update #create-drop #update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQLDialect
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
  data:
    redis:
      database: 0
      host: redis
      port: 6379

#  zipkin:
#    base-url: http://hb-zipkin:9411

  kafka:
    bootstrap-servers: hb-kafka-service:9092


  cache:
    type: redis
    cache-names:
      - bookingId
      - hotel-booking
      - user-booking
    redis:
      time-to-live: 300000
      cache-null-values: true

eureka:
  instance:
    hostname: hb-eureka-server
    port: 9200
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
    enabled: false

logging:
  level:
    org:
      springframework:
        security: DEBUG

custom:
  paypal:
    mode: sandbox
    client:
      id: AU3lFjUm-hpp4z8Pls4QMHeqqqpKxrt167x8At0meKHLVFbPeBBawprvPbUSehMpIU1BS6SO--beEupW
      secret: EMid4txa6eaYtjwCXWSWOi69TicrlPIR86gcFvsmexKuvK4I98vMFm8G-q6QY1_Cy3BTP6uaU0cYSw9c
    host: http://10.0.0.110:8001
    frontend: http://ec2-35-171-6-79.compute-1.amazonaws.com
  security:
    rsa:
      public-key: classpath:certs/public.pem
    roles:
      - ADMIN
      - APP_USER
      - HOTEL_MANAGER
  redis:
    host: redis
    port: 6379

